<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="25" failures="0" file="subnet_calculator_tests.py" name="subnet_calculator_tests.TestCalculateIpv4UpperRange-20201010184906" skipped="0" tests="25" time="0.067" timestamp="2020-10-10T18:49:07">
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_maximum_ip_and_well_below_maximum_subnet" time="0.005" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1126, in test_calculate_range_in_bit_format_maximum_ip_and_well_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '11111111.11111111.11110000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_maximum_ip_and_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1116, in test_calculate_range_in_bit_format_with_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '11111111.11111111.11111111.11111110')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_maximum_ip_and_one_below_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1121, in test_calculate_range_in_bit_format_with_maximum_ip_and_one_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '11111111.11111111.11111111.11111100')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_minimum_ip_and_well_above_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1091, in test_calculate_range_in_bit_format_with_minimum_ip_and_well_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('0.0.0.0', '11111111.11110000.00000000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_one_above_minimum_ip_and_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1096, in test_calculate_range_in_bit_format_with_one_above_minimum_ip_and_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('1.1.1.1', '10000000.00000000.00000000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_one_above_minimum_ip_and_one_above_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1106, in test_calculate_range_in_bit_format_with_one_above_minimum_ip_and_one_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('1.1.1.1', '11000000.00000000.00000000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_one_below_maximum_ip_and_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1131, in test_calculate_range_in_bit_format_with_one_below_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('254.254.254.254', '11111111.11111111.11111111.11111110')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_one_below_maximum_ip_and_one_below_maximum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1141, in test_calculate_range_in_bit_format_with_one_below_maximum_ip_and_one_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('254.254.254.254', '11111111.11111111.11111111.11111100')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_well_above_minimum_ip_and_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1101, in test_calculate_range_in_bit_format_with_well_above_minimum_ip_and_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '10000000.00000000.00000000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_well_above_minimum_ip_and_well_above_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1111, in test_calculate_range_in_bit_format_with_well_above_minimum_ip_and_well_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '11111111.11111000.00000000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_well_below_maximum_ip_and_maximum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1136, in test_calculate_range_in_bit_format_with_well_below_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '11111111.11111111.11111111.11111110')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_bit_format_with_well_below_maximum_ip_and_well_below_maximum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1146, in test_calculate_range_in_bit_format_with_well_below_maximum_ip_and_well_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '11111111.11111111.11110000.00000000')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_maximum_ip_and_well_below_maximum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1066, in test_calculate_range_in_ip_format_maximum_ip_and_well_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '255.255.240.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_maximum_ip_and_maximum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1056, in test_calculate_range_in_ip_format_with_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '255.255.255.254')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_maximum_ip_and_one_below_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1061, in test_calculate_range_in_ip_format_with_maximum_ip_and_one_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('255.255.255.255', '255.255.255.252')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_minimum_ip_and_minimum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1026, in test_calculate_range_in_ip_format_with_minimum_ip_and_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('0.0.0.0', '128.0.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_minimum_ip_and_one_above_minimum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1031, in test_calculate_range_in_ip_format_with_minimum_ip_and_one_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('0.0.0.0', '192.0.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_minimum_ip_and_well_above_minimum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1036, in test_calculate_range_in_ip_format_with_minimum_ip_and_well_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('0.0.0.0', '255.240.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_one_above_minimum_ip_and_minimum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1041, in test_calculate_range_in_ip_format_with_one_above_minimum_ip_and_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('1.1.1.1', '128.0.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_one_below_maximum_ip_and_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1071, in test_calculate_range_in_ip_format_with_one_below_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('254.254.254.254', '255.255.255.254')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_one_below_maximum_ip_and_one_below_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1081, in test_calculate_range_in_ip_format_with_one_below_maximum_ip_and_one_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('254.254.254.254', '255.255.255.252')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_well_above_minimum_ip_and_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1046, in test_calculate_range_in_ip_format_with_well_above_minimum_ip_and_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '128.0.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_well_above_minimum_ip_and_well_above_minimum_subnet" time="0.003" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1051, in test_calculate_range_in_ip_format_with_well_above_minimum_ip_and_well_above_minimum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '255.248.0.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_well_below_maximum_ip_and_maximum_subnet" time="0.002" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1076, in test_calculate_range_in_ip_format_with_well_below_maximum_ip_and_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '255.255.255.254')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
	<testcase classname="subnet_calculator_tests.TestCalculateIpv4UpperRange" name="test_calculate_range_in_ip_format_with_well_below_maximum_ip_and_well_below_maximum_subnet" time="0.004" timestamp="2020-10-10T18:49:07">
		<error message="calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'" type="TypeError">
<![CDATA[Traceback (most recent call last):
  File "/usr/lib/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/student/Documents/cs3280project2/src/unittest/python/subnet_calculator_tests.py", line 1086, in test_calculate_range_in_ip_format_with_well_below_maximum_ip_and_well_below_maximum_subnet
    subnet = subnet_calculator.calculate_upper_ipv4_range('160.160.160.160', '255.255.240.0')
  File "/home/student/Documents/cs3280project2/src/main/python/subnet_calculator.py", line 221, in calculate_upper_ipv4_range
    opposite_binary = calculate_binary_opposite(bin(int(group)))
TypeError: calculate_binary_opposite() missing 1 required positional argument: 'max_length_for_leading_zeros'
]]>		</error>
	</testcase>
</testsuite>
